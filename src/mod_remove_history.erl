-module(mod_remove_history).

-behaviour(gen_mod).

-export([start/2, stop/1, process_local_iq/3]).

-include("ejabberd.hrl").
-include("logger.hrl").
-include("jlib.hrl").

-define(NS_REMOVE_HISTORY, <<"jabber:iq:remove_history">>). 


start(Host, Opts) ->
    gen_iq_handler:add_iq_handler(ejabberd_local, Host,
				  ?NS_REMOVE_HISTORY, ?MODULE, process_local_iq, one_queue).

stop(Host) ->
    gen_iq_handler:remove_iq_handler(ejabberd_local, Host,
				     ?NS_REMOVE_HISTORY).

process_local_iq(From,_To,#iq{type=set, sub_el = SubEl} = IQ) -> 
    Tag = fxml:get_subtag(SubEl, <<"id">>),
    {xmlel,_,_,Children} = Tag,
    MessageId = binary_to_list(fxml:get_cdata(Children)),
    Messages = ultra_dirty_select(MessageId),
    lists:foreach(fun(Rec) ->
			  ok = mnesia:dirty_delete_object(Rec)
		  end, Messages),
    Result = #xmlel{name = <<"result">>, attrs = [{<<"status">>,<<"ok">>}]},
    IQ#iq{type = result,sub_el = [Result]}.


%Generated by mnesia:table_info(Tab,wild_pattern).
%TODO: rewrite to #bindings{}
ultra_dirty_select(ID) ->
	mnesia:dirty_match_object(
		{archive_msg,'_','_','_','_','_',
		{xmlel,'_',[{'_','_'},{'_','_'},{'_','_'},{'_','_'},{<<"id">>,list_to_binary(ID)}],'_'},
		'_',chat}). 
